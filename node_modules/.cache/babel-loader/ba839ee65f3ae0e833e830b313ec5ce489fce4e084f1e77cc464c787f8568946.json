{"ast":null,"code":"var _jsxFileName = \"/home/hamada/workspace/practice/react/makeApp/test-app/src/components/board/cell/Cell.tsx\";\nimport React from 'react';\nimport './cell.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cell = ({\n  id,\n  count,\n  setCount,\n  isColor,\n  setIsColor\n}) => {\n  const countUp = () => {\n    setCount(count + 1);\n  };\n  const handleSelect = () => {\n    if (isColor === null) {\n      countUp();\n      {\n        count % 2 === 0 ? setIsColor('white') : setIsColor('black');\n      }\n    } else {\n      alert('そこに置くことはできません');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SButton, {\n    $isColor: isColor,\n    onClick: handleSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = Cell;\nexport default Cell;\nconst SButton = styled.button`\n  background: ${props => props.$isColor === \"black\" ? \"black\" : props.$isColor === \"white\" ? \"white\" : \"#008000\"};\n  border: 3px solid #000;\n  height: 25%;\n  width: 25%;\n  cursor: pointer;\n`;\n_c2 = SButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"SButton\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Cell","id","count","setCount","isColor","setIsColor","countUp","handleSelect","alert","SButton","$isColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","button","props","_c2","$RefreshReg$"],"sources":["/home/hamada/workspace/practice/react/makeApp/test-app/src/components/board/cell/Cell.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './cell.css';\nimport styled from 'styled-components';\n\ntype CellProps = {\n  id: string;\n  count: number;\n  setCount: React.Dispatch<React.SetStateAction<number>>;\n  setIsColor: React.Dispatch<React.SetStateAction<\"black\" | \"white\" | null>>\n  isColor: \"black\" | \"white\" | null;\n};\nexport const Cell = ({ id, count, setCount, isColor, setIsColor }: CellProps) => {\n\n  const countUp = () => {\n    setCount(count + 1)\n  }\n\n  const handleSelect = () => {\n    if(isColor === null){\n      countUp()\n      {count % 2 === 0 ? setIsColor('white') : setIsColor('black')}\n    }else{\n      alert('そこに置くことはできません')\n    }\n  }\n\n\n\n  return (\n    <SButton $isColor={isColor} onClick={handleSelect} >\n      {}\n    </SButton>\n  );\n};\nexport default Cell;\n\nconst SButton = styled.button<{$isColor: \"black\" | \"white\" | null}>`\n  background: ${(props) => props.$isColor === \"black\" ? \"black\": props.$isColor === \"white\" ?  \"white\" : \"#008000\"};\n  border: 3px solid #000;\n  height: 25%;\n  width: 25%;\n  cursor: pointer;\n`;\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAO,YAAY;AACnB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvC,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAsB,CAAC,KAAK;EAE/E,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAGH,OAAO,KAAK,IAAI,EAAC;MAClBE,OAAO,CAAC,CAAC;MACT;QAACJ,KAAK,GAAG,CAAC,KAAK,CAAC,GAAGG,UAAU,CAAC,OAAO,CAAC,GAAGA,UAAU,CAAC,OAAO,CAAC;MAAA;IAC9D,CAAC,MAAI;MACHG,KAAK,CAAC,eAAe,CAAC;IACxB;EACF,CAAC;EAID,oBACET,OAAA,CAACU,OAAO;IAACC,QAAQ,EAAEN,OAAQ;IAACO,OAAO,EAAEJ;EAAa;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzC,CAAC;AAEd,CAAC;AAACC,EAAA,GAtBWhB,IAAI;AAuBjB,eAAeA,IAAI;AAEnB,MAAMS,OAAO,GAAGZ,MAAM,CAACoB,MAA4C;AACnE,gBAAiBC,KAAK,IAAKA,KAAK,CAACR,QAAQ,KAAK,OAAO,GAAG,OAAO,GAAEQ,KAAK,CAACR,QAAQ,KAAK,OAAO,GAAI,OAAO,GAAG,SAAS;AAClH;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GANIV,OAAO;AAAA,IAAAO,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}