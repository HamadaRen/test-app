{"ast":null,"code":"var _jsxFileName = \"/home/hamada/workspace/practice/react/makeApp/test-app/src/components/board/cell/Cell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './cell.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cell = ({\n  id,\n  count,\n  counyU\n}) => {\n  _s();\n  const [isBlack, setIsBlack] = useState(null);\n  const handleSelect = () => {\n    if (isBlack === null) {\n      countUp();\n      {\n        count % 2 === 0 ? setIsBlack('white') : setIsBlack('black');\n      }\n      console.log(count);\n    } else {\n      alert('そこに置くことはできません');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SButton, {\n    $isBlack: isBlack,\n    onClick: handleSelect,\n    children: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Cell, \"LEtn9gu87LC4pQFa2VMUiyKbzhA=\");\n_c = Cell;\nexport default Cell;\nconst SButton = styled.button`\n  background: ${props => props.$isBlack === \"black\" ? \"black\" : props.$isBlack === \"white\" ? \"white\" : \"#008000\"};\n  border: 3px solid #000;\n  height: 12.5%;\n  width: 12.5%;\n  cursor: pointer;\n`;\n_c2 = SButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"SButton\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Cell","id","count","counyU","_s","isBlack","setIsBlack","handleSelect","countUp","console","log","alert","SButton","$isBlack","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","button","props","_c2","$RefreshReg$"],"sources":["/home/hamada/workspace/practice/react/makeApp/test-app/src/components/board/cell/Cell.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './cell.css';\nimport styled from 'styled-components';\n\n\n\ntype CellProps = {\n  id: string;\n};\nexport const Cell = ({ id, count, counyU }: CellProps) => {\n  const [isBlack,setIsBlack] = useState<\"black\" | \"white\" | null>(null)\n\n\n  const handleSelect = () => {\n    if(isBlack === null){\n      countUp()\n      {count % 2 === 0 ? setIsBlack('white') : setIsBlack('black')}\n      console.log(count)\n    }else{\n      alert('そこに置くことはできません')\n    }\n  }\n\n  return (\n    <SButton $isBlack={isBlack} onClick={handleSelect} >\n      {id}\n    </SButton>\n  );\n};\nexport default Cell;\n\nconst SButton = styled.button<{$isBlack: \"black\" | \"white\" | null}>`\n  background: ${(props) => props.$isBlack === \"black\" ? \"black\": props.$isBlack === \"white\" ?  \"white\" : \"#008000\"};\n  border: 3px solid #000;\n  height: 12.5%;\n  width: 12.5%;\n  cursor: pointer;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvC,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGV,QAAQ,CAA2B,IAAI,CAAC;EAGrE,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAGF,OAAO,KAAK,IAAI,EAAC;MAClBG,OAAO,CAAC,CAAC;MACT;QAACN,KAAK,GAAG,CAAC,KAAK,CAAC,GAAGI,UAAU,CAAC,OAAO,CAAC,GAAGA,UAAU,CAAC,OAAO,CAAC;MAAA;MAC5DG,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IACpB,CAAC,MAAI;MACHS,KAAK,CAAC,eAAe,CAAC;IACxB;EACF,CAAC;EAED,oBACEZ,OAAA,CAACa,OAAO;IAACC,QAAQ,EAAER,OAAQ;IAACS,OAAO,EAAEP,YAAa;IAAAQ,QAAA,EAC/Cd;EAAE;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEd,CAAC;AAACf,EAAA,CAnBWJ,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAoBjB,eAAeA,IAAI;AAEnB,MAAMY,OAAO,GAAGf,MAAM,CAACwB,MAA4C;AACnE,gBAAiBC,KAAK,IAAKA,KAAK,CAACT,QAAQ,KAAK,OAAO,GAAG,OAAO,GAAES,KAAK,CAACT,QAAQ,KAAK,OAAO,GAAI,OAAO,GAAG,SAAS;AAClH;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GANIX,OAAO;AAAA,IAAAQ,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}